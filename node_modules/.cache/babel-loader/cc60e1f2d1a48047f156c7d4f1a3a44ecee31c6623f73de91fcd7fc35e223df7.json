{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\galaxy book pro\\\\Desktop\\\\projet cloud\\\\frontend\\\\frontend\\\\src\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [error, setError] = useState('');\n  const CLIENT_ID = \"votre-client-id-google\"; // Remplacez par votre client ID\n  const REDIRECT_URI = \"http://localhost:5000/auth\"; // Les permissions que vous voulez demander\n\n  // Fonction de gestion de la connexion via Google\n  const handleGoogleLogin = () => {\n    const tokenClient = google.accounts.oauth2.initTokenClient({\n      client_id: CLIENT_ID,\n      scope: SCOPES,\n      callback: response => {\n        if (response.access_token) {\n          // Stocker le token dans localStorage\n          localStorage.setItem(\"googleToken\", response.access_token);\n          window.location.href = \"/calendar\"; // Rediriger vers la page du calendrier\n        } else {\n          setError(\"Erreur lors de l'obtention du token Google.\");\n        }\n      }\n    });\n    tokenClient.requestAccessToken();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGoogleLogin,\n      children: \"Login with Google\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"/PuDV6TKqxF+sNNiHmyv2C3jNxE=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Login","_s","error","setError","CLIENT_ID","REDIRECT_URI","handleGoogleLogin","tokenClient","google","accounts","oauth2","initTokenClient","client_id","scope","SCOPES","callback","response","access_token","localStorage","setItem","window","location","href","requestAccessToken","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/galaxy book pro/Desktop/projet cloud/frontend/frontend/src/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Login = () => {\r\n  const [error, setError] = useState('');\r\n\r\n\r\n  const CLIENT_ID = \"votre-client-id-google\"; // Remplacez par votre client ID\r\nconst REDIRECT_URI = \"http://localhost:5000/auth\"; // Les permissions que vous voulez demander\r\n  \r\n\r\n  // Fonction de gestion de la connexion via Google\r\n  const handleGoogleLogin = () => {\r\n    const tokenClient = google.accounts.oauth2.initTokenClient({\r\n      client_id: CLIENT_ID,\r\n      scope: SCOPES,\r\n      callback: (response) => {\r\n        if (response.access_token) {\r\n          // Stocker le token dans localStorage\r\n          localStorage.setItem(\"googleToken\", response.access_token);\r\n          window.location.href = \"/calendar\"; // Rediriger vers la page du calendrier\r\n        } else {\r\n          setError(\"Erreur lors de l'obtention du token Google.\");\r\n        }\r\n      },\r\n    });\r\n  \r\n    tokenClient.requestAccessToken();\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h2>Login</h2>\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n      <button onClick={handleGoogleLogin}>Login with Google</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAGtC,MAAMQ,SAAS,GAAG,wBAAwB,CAAC,CAAC;EAC9C,MAAMC,YAAY,GAAG,4BAA4B,CAAC,CAAC;;EAGjD;EACA,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,MAAMC,WAAW,GAAGC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAACC,eAAe,CAAC;MACzDC,SAAS,EAAER,SAAS;MACpBS,KAAK,EAAEC,MAAM;MACbC,QAAQ,EAAGC,QAAQ,IAAK;QACtB,IAAIA,QAAQ,CAACC,YAAY,EAAE;UACzB;UACAC,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEH,QAAQ,CAACC,YAAY,CAAC;UAC1DG,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,WAAW,CAAC,CAAC;QACtC,CAAC,MAAM;UACLnB,QAAQ,CAAC,6CAA6C,CAAC;QACzD;MACF;IACF,CAAC,CAAC;IAEFI,WAAW,CAACgB,kBAAkB,CAAC,CAAC;EAClC,CAAC;EAGD,oBACExB,OAAA;IAAKyB,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9B1B,OAAA;MAAA0B,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACb3B,KAAK,iBAAIH,OAAA;MAAGyB,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAEvB;IAAK;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClD9B,OAAA;MAAQ+B,OAAO,EAAExB,iBAAkB;MAAAmB,QAAA,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3D,CAAC;AAEV,CAAC;AAAC5B,EAAA,CAnCID,KAAK;AAAA+B,EAAA,GAAL/B,KAAK;AAqCX,eAAeA,KAAK;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}