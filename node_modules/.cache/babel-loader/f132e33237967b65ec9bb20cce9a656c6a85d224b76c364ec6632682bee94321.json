{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\galaxy book pro\\\\Desktop\\\\projet cloud\\\\frontend\\\\frontend\\\\src\\\\CalendarComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CLIENT_ID = \"100174910445-i34qd8f9l36pipfd4cce62jhm1u3be8h.apps.googleusercontent.com\";\nconst SCOPES = \"https://www.googleapis.com/auth/calendar.events https://www.googleapis.com/auth/calendar\";\nfunction CalendarComponent() {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [error, setError] = useState(null);\n  const [token, setToken] = useState(null);\n  const [selectedRoom, setSelectedRoom] = useState(\"\");\n  const [availableTimes, setAvailableTimes] = useState([]);\n  const [formData, setFormData] = useState({\n    date: \"\",\n    time: \"\",\n    email: \"\"\n  });\n  const rooms = [{\n    id: \"room10\",\n    name: \"Salle 10\",\n    times: [\"09:00\", \"10:00\", \"11:00\"]\n  }, {\n    id: \"room20\",\n    name: \"Salle 20\",\n    times: [\"12:00\", \"13:00\", \"14:00\"]\n  }];\n\n  // Charger les événements depuis Flask\n  useEffect(() => {\n    fetch(\"http://localhost:5000/api/reservations\").then(response => response.json()).then(data => {\n      const formattedEvents = data.map(event => ({\n        title: `Salle ${event.room_id} - Réservé par ${event.email}`,\n        start: event.start_time,\n        end: event.end_time\n      }));\n      setEvents(prevEvents => {\n        const uniqueEvents = [...prevEvents];\n        formattedEvents.forEach(newEvent => {\n          if (!uniqueEvents.some(e => e.start === newEvent.start && e.title === newEvent.title)) {\n            uniqueEvents.push(newEvent);\n          }\n        });\n        return uniqueEvents;\n      });\n    }).catch(error => {\n      console.error(\"Erreur lors du chargement des réservations depuis Flask :\", error);\n    });\n  }, []);\n\n  // Initialisation de l'API Google OAuth\n  useEffect(() => {\n    const initializeGIS = () => {\n      /* eslint-disable no-undef */\n      const tokenClient = google.accounts.oauth2.initTokenClient({\n        client_id: CLIENT_ID,\n        scope: SCOPES,\n        callback: response => {\n          if (response.access_token) {\n            setToken(response.access_token);\n          } else {\n            setError(\"Erreur lors de l'obtention du token Google.\");\n          }\n        }\n      });\n      tokenClient.requestAccessToken();\n    };\n    const checkGoogleLoaded = () => {\n      if (typeof google === \"undefined\") {\n        setTimeout(checkGoogleLoaded, 100);\n      } else {\n        initializeGIS();\n      }\n    };\n    checkGoogleLoaded();\n  }, []);\n\n  // Ajouter une réservation à Flask\n  const addReservationToFlask = reservation => {\n    fetch(\"http://localhost:5000/api/reservations\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(reservation)\n    }).then(response => response.json()).then(data => {\n      setEvents(prevEvents => [...prevEvents, {\n        title: `Salle ${data.room_id} - Réservé par ${data.email}`,\n        start: data.start_time,\n        end: data.end_time\n      }]);\n    }).catch(error => console.error(\"Erreur lors de l'ajout de la réservation dans Flask :\", error));\n  };\n\n  // Gérer le changement de salle\n  const handleRoomChange = e => {\n    const room = rooms.find(r => r.id === e.target.value);\n    setSelectedRoom(room.id);\n    setAvailableTimes(room.times);\n  };\n\n  // Gérer la soumission du formulaire de réservation\n  const handleReservation = e => {\n    e.preventDefault();\n    if (!token) {\n      setError(\"Vous devez être connecté pour ajouter une réservation.\");\n      return;\n    }\n    const newReservation = {\n      room_id: selectedRoom,\n      email: formData.email,\n      start_time: `${formData.date}T${formData.time}`,\n      end_time: `${formData.date}T${parseInt(formData.time.split(\":\")[0]) + 1}:00:00`\n    };\n    addReservationToFlask(newReservation);\n    setFormData({\n      date: \"\",\n      time: \"\",\n      email: \"\"\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"R\\xE9servations de salles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleReservation,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Salle : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: handleRoomChange,\n        value: selectedRoom,\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"S\\xE9lectionnez une salle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), rooms.map(room => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: room.id,\n          children: room.name\n        }, room.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Date : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: formData.date,\n        onChange: e => setFormData({\n          ...formData,\n          date: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Heure : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: formData.time,\n        onChange: e => setFormData({\n          ...formData,\n          time: e.target.value\n        }),\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"S\\xE9lectionnez une heure\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), availableTimes.map(time => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: time,\n          children: time\n        }, time, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: formData.email,\n        onChange: e => setFormData({\n          ...formData,\n          email: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"R\\xE9server\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FullCalendar, {\n      plugins: [dayGridPlugin, interactionPlugin],\n      initialView: \"dayGridMonth\",\n      events: events,\n      headerToolbar: {\n        left: \"prev,next today\",\n        center: \"title\",\n        right: \"dayGridMonth,dayGridWeek,dayGridDay\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n}\n_s(CalendarComponent, \"pBvVUenSKTP0dJz/iRkIiVnmq4c=\");\n_c = CalendarComponent;\nexport default CalendarComponent;\nvar _c;\n$RefreshReg$(_c, \"CalendarComponent\");","map":{"version":3,"names":["React","useEffect","useState","FullCalendar","dayGridPlugin","interactionPlugin","jsxDEV","_jsxDEV","CLIENT_ID","SCOPES","CalendarComponent","_s","events","setEvents","error","setError","token","setToken","selectedRoom","setSelectedRoom","availableTimes","setAvailableTimes","formData","setFormData","date","time","email","rooms","id","name","times","fetch","then","response","json","data","formattedEvents","map","event","title","room_id","start","start_time","end","end_time","prevEvents","uniqueEvents","forEach","newEvent","some","e","push","catch","console","initializeGIS","tokenClient","google","accounts","oauth2","initTokenClient","client_id","scope","callback","access_token","requestAccessToken","checkGoogleLoaded","setTimeout","addReservationToFlask","reservation","method","headers","body","JSON","stringify","handleRoomChange","room","find","r","target","value","handleReservation","preventDefault","newReservation","parseInt","split","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onSubmit","onChange","required","disabled","type","plugins","initialView","headerToolbar","left","center","right","_c","$RefreshReg$"],"sources":["C:/Users/galaxy book pro/Desktop/projet cloud/frontend/frontend/src/CalendarComponent.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\n\r\nconst CLIENT_ID = \"100174910445-i34qd8f9l36pipfd4cce62jhm1u3be8h.apps.googleusercontent.com\";\r\nconst SCOPES = \"https://www.googleapis.com/auth/calendar.events https://www.googleapis.com/auth/calendar\";\r\n\r\nfunction CalendarComponent() {\r\n  const [events, setEvents] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [token, setToken] = useState(null);\r\n  const [selectedRoom, setSelectedRoom] = useState(\"\");\r\n  const [availableTimes, setAvailableTimes] = useState([]);\r\n  const [formData, setFormData] = useState({\r\n    date: \"\",\r\n    time: \"\",\r\n    email: \"\",\r\n  });\r\n\r\n  const rooms = [\r\n    { id: \"room10\", name: \"Salle 10\", times: [\"09:00\", \"10:00\", \"11:00\"] },\r\n    { id: \"room20\", name: \"Salle 20\", times: [\"12:00\", \"13:00\", \"14:00\"] },\r\n  ];\r\n\r\n  // Charger les événements depuis Flask\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:5000/api/reservations\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        const formattedEvents = data.map((event) => ({\r\n          title: `Salle ${event.room_id} - Réservé par ${event.email}`,\r\n          start: event.start_time,\r\n          end: event.end_time,\r\n        }));\r\n        setEvents((prevEvents) => {\r\n          const uniqueEvents = [...prevEvents];\r\n          formattedEvents.forEach((newEvent) => {\r\n            if (\r\n              !uniqueEvents.some(\r\n                (e) => e.start === newEvent.start && e.title === newEvent.title\r\n              )\r\n            ) {\r\n              uniqueEvents.push(newEvent);\r\n            }\r\n          });\r\n          return uniqueEvents;\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Erreur lors du chargement des réservations depuis Flask :\", error);\r\n      });\r\n  }, []);\r\n\r\n  // Initialisation de l'API Google OAuth\r\n  useEffect(() => {\r\n    const initializeGIS = () => {\r\n      /* eslint-disable no-undef */\r\n      const tokenClient = google.accounts.oauth2.initTokenClient({\r\n        client_id: CLIENT_ID,\r\n        scope: SCOPES,\r\n        callback: (response) => {\r\n          if (response.access_token) {\r\n            setToken(response.access_token);\r\n          } else {\r\n            setError(\"Erreur lors de l'obtention du token Google.\");\r\n          }\r\n        },\r\n      });\r\n\r\n      tokenClient.requestAccessToken();\r\n    };\r\n\r\n    const checkGoogleLoaded = () => {\r\n      if (typeof google === \"undefined\") {\r\n        setTimeout(checkGoogleLoaded, 100);\r\n      } else {\r\n        initializeGIS();\r\n      }\r\n    };\r\n\r\n    checkGoogleLoaded();\r\n  }, []);\r\n\r\n  // Ajouter une réservation à Flask\r\n  const addReservationToFlask = (reservation) => {\r\n    fetch(\"http://localhost:5000/api/reservations\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(reservation),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setEvents((prevEvents) => [\r\n          ...prevEvents,\r\n          {\r\n            title: `Salle ${data.room_id} - Réservé par ${data.email}`,\r\n            start: data.start_time,\r\n            end: data.end_time,\r\n          },\r\n        ]);\r\n      })\r\n      .catch((error) => console.error(\"Erreur lors de l'ajout de la réservation dans Flask :\", error));\r\n  };\r\n\r\n  // Gérer le changement de salle\r\n  const handleRoomChange = (e) => {\r\n    const room = rooms.find((r) => r.id === e.target.value);\r\n    setSelectedRoom(room.id);\r\n    setAvailableTimes(room.times);\r\n  };\r\n\r\n  // Gérer la soumission du formulaire de réservation\r\n  const handleReservation = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!token) {\r\n      setError(\"Vous devez être connecté pour ajouter une réservation.\");\r\n      return;\r\n    }\r\n\r\n    const newReservation = {\r\n      room_id: selectedRoom,\r\n      email: formData.email,\r\n      start_time: `${formData.date}T${formData.time}`,\r\n      end_time: `${formData.date}T${parseInt(formData.time.split(\":\")[0]) + 1}:00:00`,\r\n    };\r\n\r\n    addReservationToFlask(newReservation);\r\n    setFormData({ date: \"\", time: \"\", email: \"\" });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Réservations de salles</h1>\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n\r\n      <form onSubmit={handleReservation}>\r\n        <label>Salle : </label>\r\n        <select onChange={handleRoomChange} value={selectedRoom} required>\r\n          <option value=\"\" disabled>\r\n            Sélectionnez une salle\r\n          </option>\r\n          {rooms.map((room) => (\r\n            <option key={room.id} value={room.id}>\r\n              {room.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <label>Date : </label>\r\n        <input\r\n          type=\"date\"\r\n          value={formData.date}\r\n          onChange={(e) => setFormData({ ...formData, date: e.target.value })}\r\n          required\r\n        />\r\n        <label>Heure : </label>\r\n        <select\r\n          value={formData.time}\r\n          onChange={(e) => setFormData({ ...formData, time: e.target.value })}\r\n          required\r\n        >\r\n          <option value=\"\" disabled>\r\n            Sélectionnez une heure\r\n          </option>\r\n          {availableTimes.map((time) => (\r\n            <option key={time} value={time}>\r\n              {time}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <label>Email : </label>\r\n        <input\r\n          type=\"email\"\r\n          value={formData.email}\r\n          onChange={(e) => setFormData({ ...formData, email: e.target.value })}\r\n          required\r\n        />\r\n        <button type=\"submit\">Réserver</button>\r\n      </form>\r\n\r\n      <FullCalendar\r\n        plugins={[dayGridPlugin, interactionPlugin]}\r\n        initialView=\"dayGridMonth\"\r\n        events={events}\r\n        headerToolbar={{\r\n          left: \"prev,next today\",\r\n          center: \"title\",\r\n          right: \"dayGridMonth,dayGridWeek,dayGridDay\",\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CalendarComponent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,YAAY,MAAM,qBAAqB;AAC9C,OAAOC,aAAa,MAAM,uBAAuB;AACjD,OAAOC,iBAAiB,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,SAAS,GAAG,0EAA0E;AAC5F,MAAMC,MAAM,GAAG,0FAA0F;AAEzG,SAASC,iBAAiBA,CAAA,EAAG;EAAAC,EAAA;EAC3B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACgB,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACkB,cAAc,EAAEC,iBAAiB,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACoB,QAAQ,EAAEC,WAAW,CAAC,GAAGrB,QAAQ,CAAC;IACvCsB,IAAI,EAAE,EAAE;IACRC,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE;EACT,CAAC,CAAC;EAEF,MAAMC,KAAK,GAAG,CACZ;IAAEC,EAAE,EAAE,QAAQ;IAAEC,IAAI,EAAE,UAAU;IAAEC,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO;EAAE,CAAC,EACtE;IAAEF,EAAE,EAAE,QAAQ;IAAEC,IAAI,EAAE,UAAU;IAAEC,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO;EAAE,CAAC,CACvE;;EAED;EACA7B,SAAS,CAAC,MAAM;IACd8B,KAAK,CAAC,wCAAwC,CAAC,CAC5CC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACd,MAAMC,eAAe,GAAGD,IAAI,CAACE,GAAG,CAAEC,KAAK,KAAM;QAC3CC,KAAK,EAAE,SAASD,KAAK,CAACE,OAAO,kBAAkBF,KAAK,CAACZ,KAAK,EAAE;QAC5De,KAAK,EAAEH,KAAK,CAACI,UAAU;QACvBC,GAAG,EAAEL,KAAK,CAACM;MACb,CAAC,CAAC,CAAC;MACH/B,SAAS,CAAEgC,UAAU,IAAK;QACxB,MAAMC,YAAY,GAAG,CAAC,GAAGD,UAAU,CAAC;QACpCT,eAAe,CAACW,OAAO,CAAEC,QAAQ,IAAK;UACpC,IACE,CAACF,YAAY,CAACG,IAAI,CACfC,CAAC,IAAKA,CAAC,CAACT,KAAK,KAAKO,QAAQ,CAACP,KAAK,IAAIS,CAAC,CAACX,KAAK,KAAKS,QAAQ,CAACT,KAC5D,CAAC,EACD;YACAO,YAAY,CAACK,IAAI,CAACH,QAAQ,CAAC;UAC7B;QACF,CAAC,CAAC;QACF,OAAOF,YAAY;MACrB,CAAC,CAAC;IACJ,CAAC,CAAC,CACDM,KAAK,CAAEtC,KAAK,IAAK;MAChBuC,OAAO,CAACvC,KAAK,CAAC,2DAA2D,EAAEA,KAAK,CAAC;IACnF,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAb,SAAS,CAAC,MAAM;IACd,MAAMqD,aAAa,GAAGA,CAAA,KAAM;MAC1B;MACA,MAAMC,WAAW,GAAGC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAACC,eAAe,CAAC;QACzDC,SAAS,EAAEpD,SAAS;QACpBqD,KAAK,EAAEpD,MAAM;QACbqD,QAAQ,EAAG7B,QAAQ,IAAK;UACtB,IAAIA,QAAQ,CAAC8B,YAAY,EAAE;YACzB9C,QAAQ,CAACgB,QAAQ,CAAC8B,YAAY,CAAC;UACjC,CAAC,MAAM;YACLhD,QAAQ,CAAC,6CAA6C,CAAC;UACzD;QACF;MACF,CAAC,CAAC;MAEFwC,WAAW,CAACS,kBAAkB,CAAC,CAAC;IAClC,CAAC;IAED,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;MAC9B,IAAI,OAAOT,MAAM,KAAK,WAAW,EAAE;QACjCU,UAAU,CAACD,iBAAiB,EAAE,GAAG,CAAC;MACpC,CAAC,MAAM;QACLX,aAAa,CAAC,CAAC;MACjB;IACF,CAAC;IAEDW,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAME,qBAAqB,GAAIC,WAAW,IAAK;IAC7CrC,KAAK,CAAC,wCAAwC,EAAE;MAC9CsC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,WAAW;IAClC,CAAC,CAAC,CACCpC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACdtB,SAAS,CAAEgC,UAAU,IAAK,CACxB,GAAGA,UAAU,EACb;QACEN,KAAK,EAAE,SAASJ,IAAI,CAACK,OAAO,kBAAkBL,IAAI,CAACT,KAAK,EAAE;QAC1De,KAAK,EAAEN,IAAI,CAACO,UAAU;QACtBC,GAAG,EAAER,IAAI,CAACS;MACZ,CAAC,CACF,CAAC;IACJ,CAAC,CAAC,CACDQ,KAAK,CAAEtC,KAAK,IAAKuC,OAAO,CAACvC,KAAK,CAAC,uDAAuD,EAAEA,KAAK,CAAC,CAAC;EACpG,CAAC;;EAED;EACA,MAAM4D,gBAAgB,GAAIxB,CAAC,IAAK;IAC9B,MAAMyB,IAAI,GAAGhD,KAAK,CAACiD,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACjD,EAAE,KAAKsB,CAAC,CAAC4B,MAAM,CAACC,KAAK,CAAC;IACvD5D,eAAe,CAACwD,IAAI,CAAC/C,EAAE,CAAC;IACxBP,iBAAiB,CAACsD,IAAI,CAAC7C,KAAK,CAAC;EAC/B,CAAC;;EAED;EACA,MAAMkD,iBAAiB,GAAI9B,CAAC,IAAK;IAC/BA,CAAC,CAAC+B,cAAc,CAAC,CAAC;IAElB,IAAI,CAACjE,KAAK,EAAE;MACVD,QAAQ,CAAC,wDAAwD,CAAC;MAClE;IACF;IAEA,MAAMmE,cAAc,GAAG;MACrB1C,OAAO,EAAEtB,YAAY;MACrBQ,KAAK,EAAEJ,QAAQ,CAACI,KAAK;MACrBgB,UAAU,EAAE,GAAGpB,QAAQ,CAACE,IAAI,IAAIF,QAAQ,CAACG,IAAI,EAAE;MAC/CmB,QAAQ,EAAE,GAAGtB,QAAQ,CAACE,IAAI,IAAI2D,QAAQ,CAAC7D,QAAQ,CAACG,IAAI,CAAC2D,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;IACzE,CAAC;IAEDjB,qBAAqB,CAACe,cAAc,CAAC;IACrC3D,WAAW,CAAC;MAAEC,IAAI,EAAE,EAAE;MAAEC,IAAI,EAAE,EAAE;MAAEC,KAAK,EAAE;IAAG,CAAC,CAAC;EAChD,CAAC;EAED,oBACEnB,OAAA;IAAA8E,QAAA,gBACE9E,OAAA;MAAA8E,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC9B3E,KAAK,iBAAIP,OAAA;MAAGmF,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAN,QAAA,EAAEvE;IAAK;MAAAwE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEjDlF,OAAA;MAAMqF,QAAQ,EAAEZ,iBAAkB;MAAAK,QAAA,gBAChC9E,OAAA;QAAA8E,QAAA,EAAO;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACvBlF,OAAA;QAAQsF,QAAQ,EAAEnB,gBAAiB;QAACK,KAAK,EAAE7D,YAAa;QAAC4E,QAAQ;QAAAT,QAAA,gBAC/D9E,OAAA;UAAQwE,KAAK,EAAC,EAAE;UAACgB,QAAQ;UAAAV,QAAA,EAAC;QAE1B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EACR9D,KAAK,CAACU,GAAG,CAAEsC,IAAI,iBACdpE,OAAA;UAAsBwE,KAAK,EAAEJ,IAAI,CAAC/C,EAAG;UAAAyD,QAAA,EAClCV,IAAI,CAAC9C;QAAI,GADC8C,IAAI,CAAC/C,EAAE;UAAA0D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEZ,CACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC,eACTlF,OAAA;QAAA8E,QAAA,EAAO;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACtBlF,OAAA;QACEyF,IAAI,EAAC,MAAM;QACXjB,KAAK,EAAEzD,QAAQ,CAACE,IAAK;QACrBqE,QAAQ,EAAG3C,CAAC,IAAK3B,WAAW,CAAC;UAAE,GAAGD,QAAQ;UAAEE,IAAI,EAAE0B,CAAC,CAAC4B,MAAM,CAACC;QAAM,CAAC,CAAE;QACpEe,QAAQ;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACFlF,OAAA;QAAA8E,QAAA,EAAO;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACvBlF,OAAA;QACEwE,KAAK,EAAEzD,QAAQ,CAACG,IAAK;QACrBoE,QAAQ,EAAG3C,CAAC,IAAK3B,WAAW,CAAC;UAAE,GAAGD,QAAQ;UAAEG,IAAI,EAAEyB,CAAC,CAAC4B,MAAM,CAACC;QAAM,CAAC,CAAE;QACpEe,QAAQ;QAAAT,QAAA,gBAER9E,OAAA;UAAQwE,KAAK,EAAC,EAAE;UAACgB,QAAQ;UAAAV,QAAA,EAAC;QAE1B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EACRrE,cAAc,CAACiB,GAAG,CAAEZ,IAAI,iBACvBlB,OAAA;UAAmBwE,KAAK,EAAEtD,IAAK;UAAA4D,QAAA,EAC5B5D;QAAI,GADMA,IAAI;UAAA6D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAET,CACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC,eACTlF,OAAA;QAAA8E,QAAA,EAAO;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACvBlF,OAAA;QACEyF,IAAI,EAAC,OAAO;QACZjB,KAAK,EAAEzD,QAAQ,CAACI,KAAM;QACtBmE,QAAQ,EAAG3C,CAAC,IAAK3B,WAAW,CAAC;UAAE,GAAGD,QAAQ;UAAEI,KAAK,EAAEwB,CAAC,CAAC4B,MAAM,CAACC;QAAM,CAAC,CAAE;QACrEe,QAAQ;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACFlF,OAAA;QAAQyF,IAAI,EAAC,QAAQ;QAAAX,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,eAEPlF,OAAA,CAACJ,YAAY;MACX8F,OAAO,EAAE,CAAC7F,aAAa,EAAEC,iBAAiB,CAAE;MAC5C6F,WAAW,EAAC,cAAc;MAC1BtF,MAAM,EAAEA,MAAO;MACfuF,aAAa,EAAE;QACbC,IAAI,EAAE,iBAAiB;QACvBC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE;MACT;IAAE;MAAAhB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAC9E,EAAA,CA3LQD,iBAAiB;AAAA6F,EAAA,GAAjB7F,iBAAiB;AA6L1B,eAAeA,iBAAiB;AAAC,IAAA6F,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}