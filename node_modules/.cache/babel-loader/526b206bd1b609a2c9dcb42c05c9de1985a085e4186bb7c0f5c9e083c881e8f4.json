{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\galaxy book pro\\\\Desktop\\\\projet cloud\\\\frontend\\\\frontend\\\\src\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CLIENT_ID = \"16844726883-nktuvt7v0fvoua9h948nvvl5ljddau9p.apps.googleusercontent.com\";\nconst SCOPES = \"https://www.googleapis.com/auth/calendar.events https://www.googleapis.com/auth/calendar\";\nconst Login = () => {\n  _s();\n  const [error, setError] = useState('');\n\n  // Fonction de gestion de la connexion via Google\n  const handleGoogleLogin = () => {\n    // Utiliser la bibliothèque de Google OAuth pour récupérer le token d'accès\n    const tokenClient = google.accounts.oauth2.initTokenClient({\n      client_id: CLIENT_ID,\n      scope: SCOPES,\n      callback: response => {\n        if (response.access_token) {\n          // Stocker le token dans localStorage pour une utilisation future\n          localStorage.setItem(\"googleToken\", response.access_token);\n\n          // Rediriger vers le backend Flask pour finaliser l'authentification\n          window.location.href = \"http://127.0.0.1:5000/auth\"; // Rediriger vers Flask\n        } else {\n          setError(\"Erreur lors de l'obtention du token Google.\");\n        }\n      }\n    });\n    tokenClient.requestAccessToken(); // Demander le token d'accès\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGoogleLogin,\n      children: \"Login with Google\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"/PuDV6TKqxF+sNNiHmyv2C3jNxE=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CLIENT_ID","SCOPES","Login","_s","error","setError","handleGoogleLogin","tokenClient","google","accounts","oauth2","initTokenClient","client_id","scope","callback","response","access_token","localStorage","setItem","window","location","href","requestAccessToken","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/galaxy book pro/Desktop/projet cloud/frontend/frontend/src/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst CLIENT_ID = \"16844726883-nktuvt7v0fvoua9h948nvvl5ljddau9p.apps.googleusercontent.com\";\r\nconst SCOPES = \"https://www.googleapis.com/auth/calendar.events https://www.googleapis.com/auth/calendar\";\r\n\r\nconst Login = () => {\r\n  const [error, setError] = useState('');\r\n\r\n  // Fonction de gestion de la connexion via Google\r\n  const handleGoogleLogin = () => {\r\n    // Utiliser la bibliothèque de Google OAuth pour récupérer le token d'accès\r\n    const tokenClient = google.accounts.oauth2.initTokenClient({\r\n      client_id: CLIENT_ID,\r\n      scope: SCOPES,\r\n      callback: (response) => {\r\n        if (response.access_token) {\r\n          // Stocker le token dans localStorage pour une utilisation future\r\n          localStorage.setItem(\"googleToken\", response.access_token);\r\n\r\n          // Rediriger vers le backend Flask pour finaliser l'authentification\r\n          window.location.href = \"http://127.0.0.1:5000/auth\"; // Rediriger vers Flask\r\n        } else {\r\n          setError(\"Erreur lors de l'obtention du token Google.\");\r\n        }\r\n      },\r\n    });\r\n\r\n    tokenClient.requestAccessToken(); // Demander le token d'accès\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h2>Login</h2>\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n      <button onClick={handleGoogleLogin}>Login with Google</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,SAAS,GAAG,yEAAyE;AAC3F,MAAMC,MAAM,GAAG,0FAA0F;AAEzG,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACA,MAAMS,iBAAiB,GAAGA,CAAA,KAAM;IAC9B;IACA,MAAMC,WAAW,GAAGC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAACC,eAAe,CAAC;MACzDC,SAAS,EAAEZ,SAAS;MACpBa,KAAK,EAAEZ,MAAM;MACba,QAAQ,EAAGC,QAAQ,IAAK;QACtB,IAAIA,QAAQ,CAACC,YAAY,EAAE;UACzB;UACAC,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEH,QAAQ,CAACC,YAAY,CAAC;;UAE1D;UACAG,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,4BAA4B,CAAC,CAAC;QACvD,CAAC,MAAM;UACLhB,QAAQ,CAAC,6CAA6C,CAAC;QACzD;MACF;IACF,CAAC,CAAC;IAEFE,WAAW,CAACe,kBAAkB,CAAC,CAAC,CAAC,CAAC;EACpC,CAAC;EAED,oBACEvB,OAAA;IAAKwB,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9BzB,OAAA;MAAAyB,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACbxB,KAAK,iBAAIL,OAAA;MAAGwB,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAEpB;IAAK;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClD7B,OAAA;MAAQ8B,OAAO,EAAEvB,iBAAkB;MAAAkB,QAAA,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3D,CAAC;AAEV,CAAC;AAACzB,EAAA,CAhCID,KAAK;AAAA4B,EAAA,GAAL5B,KAAK;AAkCX,eAAeA,KAAK;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}